Prompt #1

URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.
Example
Input: "Jasmine Ann Jones"
Output: "Jasmine%20Ann%20Jones"

Solution:
function makeUrl(userInput) {
    const userArray = userInput.split("");
    for (let i = 0; i < userArray.length; i++) {
      if (userArray[i] == " ") {
        userArray[i] = "%20";
      }
    };
    const solution = userArray.join('');
    return solution;
  }


Prompt #2
Write an algorithm that removes duplicates from an array. Do not use a function like filter() to solve this. Once you have solved the problem, demonstrate how it can be solved with filter(). Solve the problem with and without recursion.

Example
Input: [7, 9, "hi", 12, "hi", 7, 53]

Output: [7, 9, "hi", 12, 53]

function removeDoubles(userArray){
  let newArray = [];
  for (let i = 0; i < userArray.length; i++) {
      if (i = 0 && newArray.length < 1) {
        newArray.push(userArray[i]);
      }
      for ( let j = 0 ; j < newArray.length; j++) {
        if (userArray[i] == newArray[j]) {
          break; 
       } else {
        newArray.push(userArray[i]);  
      }
     }
   }
   return newArray; 
}